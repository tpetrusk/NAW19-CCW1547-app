<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_274523_peer_revi_feedback</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_274523_peer_revi_feedback">receiverISNOTEMPTY^EQ<item endquery="false" field="receiver" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Upsert User Record</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	var receiverID = current.receiver.sys_id.toString();
	var base = new Base();
	var feedbackTable = base.CONSTANTS.tables.feedback;
	var queryObject = {
		"receiver" : receiverID
	};
	//Total of all feedback records
	var totalRecords  = base.getAggregate(feedbackTable,queryObject,"COUNT");
	
	//Total of feedback records with score between 9-10
	var promoterCount = base.getAggregate(feedbackTable,queryObject,"COUNT",false,false,"scoreBETWEEN9@10");
	
	//Total of feedback records with score between 0-6
	var detractorCount = base.getAggregate(feedbackTable,queryObject,"COUNT",false,false,"scoreBETWEEN0@6");
	/*Calculate the mathematical average of all scores.
	Calculate the NPS value with the formula of (PromoterCount / TotalRecordCount) -(DetractorCount / TotalRecordCount)
	Save the data into the Receiver user's User Score record.*/
	var avg = base.getAggregate(feedbackTable,queryObject,"AVG","score","receiver");
	base.upsertRecord(base.CONSTANTS.tables.user_score,{
		"user" : receiverID
	},{
		"user" : receiverID,
		"average" : avg,
		"nps" : (((promoterCount/totalRecords) - (detractorCount/totalRecords)) * 100).toFixed(2)
	});
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-10-16 10:27:53</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>11ce41d900ac00107f44fb82f95a143e</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>Upsert User Record</sys_name>
        <sys_overrides/>
        <sys_package display_value="Peer Review" source="x_274523_peer_revi">0128d8281b277b0090824196bc4bcbd2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Peer Review">0128d8281b277b0090824196bc4bcbd2</sys_scope>
        <sys_update_name>sys_script_11ce41d900ac00107f44fb82f95a143e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-10-16 10:35:10</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=11ce41d900ac00107f44fb82f95a143e"/>
</record_update>
